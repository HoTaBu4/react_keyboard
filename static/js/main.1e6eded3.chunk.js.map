{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleKeyUp","e","setState","window","addEventListener","this","removeEventListener","className","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"oNAEaA,EAAb,4MACEC,MAAQ,CACNC,IAAK,WAFT,EAaEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,IAAKE,EAAEF,OAd3B,uDAKE,WACEI,OAAOC,iBAAiB,QAASC,KAAKL,eAN1C,kCASE,WACEG,OAAOG,oBAAoB,QAASD,KAAKL,eAV7C,oBAiBE,WACE,OACE,qBAAKO,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACuB,YAAnBF,KAAKP,MAAMC,IACT,0BADF,mCAE8BM,KAAKP,MAAMC,IAFzC,aArBZ,GAAyBS,IAAMC,e,MCG/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1e6eded3.chunk.js","sourcesContent":["import React from 'react';\n\nexport class App extends React.PureComponent {\n  state = {\n    key: 'nothing',\n  };\n\n  componentDidMount(): void {\n    window.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount(): void {\n    window.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (e: KeyboardEvent) => {\n    this.setState({ key: e.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          { this.state.key === 'nothing'\n            ? 'Nothing was pressed yet'\n            : `The last pressed key is [${this.state.key}]`}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}